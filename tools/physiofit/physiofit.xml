<tool id='physiofit' name='PhysioFit' version='2.1.0+galaxy0' python_template_version='3.5'>
    <requirements>
        <requirement type='package' version='2.1.0' >physiofit4galaxy</requirement>
    </requirements>
    <command detect_errors='exit_code'><![CDATA[

    physiofit4galaxy --galaxy

    #if '$input_selection.input_selector' == 'tsv':
        --data '$input_selection.datafile'
    #end if
    #if '$input_selection.input_selector' == 'json':
        --data '$input_selection.datafile'
        --config '$input_selection.cfgfile'
    #end if
    '$basic_settings.lag'
    #if '$basic_settings.deg_select.deg' == 'true':
        -d '$basic_setting.degconsts'
    #end if
    #if '$basic_settings.mc_select.montecarlo' == 'true':
        -mc '$basic_settings.mc_select.iters'
    #end if

    --vini '$advanced_settings.vini'

    #if '$advanced_settings.sd_select.sd' == 'true':
        -s '$advanced_settings.sd_select.stddevs'
    #end if
    #if '$advanced_settings.cm_select.cm' == 'true':
        -cm '$advanced_settings.cm_select.conc_met_bounds'
    #end if
    #if '$advanced_settings.fm_select.fm' == 'true':
        -fm '$advanced_settings.fm_select.flux_met_bounds'
    #end if
    #if '$advanced_settings.cb_select.cb' == 'true':
        -cb '$advanced_settings.cb_select.conc_biom_bounds'
    #end if
    #if '$advanced_settings.fb_select.fb' == 'true':
        -fb '$advanced_settings.fb_select.flux_biom_bounds'
    #end if
    #if '$advanced_settings.verbose':
        -v
    #end if
    -op '$plots' -of '$fluxes' -os '$stats' -oc '$config'

    ]]></command>
    <inputs>

        <conditional name='input_selection'>
            <param name='input_selector' type='select' label='Choose the input data type to upload (tsv or json config file. For more information please check the documentation'>
                <option value='tsv'>tsv file</option>
                <option value='json'>config file (json)</option>
            </param>
            <when value='tsv'>
                <param name='datafile' type='data' format='tsv, txt' multiple='true' label='Upload data file containing biomass and concentration values'/>
            </when>
            <when value='json'>
                <param name='datafile' type='data' format='tsv, txt' multiple='true' label='Upload data file containing biomass and concentration values'/>
                <param name='cfgfile' type='data' format='json' label='Upload configuration file' />
            </when>
        </conditional>


        <section name='basic_settings' title='Basic Settings'>

            <param name='lag' type='boolean' argument='--lag' label='Flag to estimate lag phase' truevalue='-l' falsevalue=''/>

            <conditional name='deg_select'>
                <param name='deg' type='boolean' argument='--deg' label='Flag to add degradation constants' truevalue='true' falsevalue=''/>
                <when value='true'>
                    <param type='text' name='degconsts' value='{}' label='Enter degradation constants in dictionary format (see docs for more information)'/>
                </when>
            </conditional>

            <conditional name='mc_select'>
                <param name='montecarlo' type='boolean' argument='--montecarlo' label='Flag for sensitivity analysis' truevalue='true'/>
                <when value='true'>
                    <param name='iters' type='integer' value='100' label='Number of iterations for sensitivity analysis'/>
                </when>
            </conditional>

        </section>


        <section name='advanced_settings' title='Advanced Settings'>

            <param name='vini' type='float' value='1' label='Initial value for fluxes to estimate' />

            <conditional name='sd_select'>
                <param name='sd' type='boolean' argument='-s' label='Flag to add standard deviations' truevalue='true'/>
                <when value='true'>
                    <param name='stddevs' type='text' value='{}' label='Standard deviation on measurements. Give SDs in dictionary format (see docs for more information)' />
                </when>
            </conditional>

            <conditional name='cm_select'>
                <param name='cm' type='boolean' argument='-cm' label='Flag to add bounds on metabolite concentrations' truevalue='true' />
                <when value='true'>
                    <param name='conc_met_bounds' type='text' value='()' label='Bounds on metabolite concentrations. Bounds should be given in tuple format (see docs for more information)' />
                </when>
            </conditional>

            <conditional name='fm_select'>
                <param name='fm' type='boolean' argument='-fm' label='Flag to add bounds on metabolite fluxes' truevalue='true' />
                <when value='true'>
                    <param name='flux_met_bounds' type='text' value='()' label='Bounds on metabolite fluxes. Bounds should be given in tuple format (see docs for more information)' />
                </when>
            </conditional>

            <conditional name='cb_select'>
                <param name='cb' type='boolean' argument='-cb' label='Flag to add bounds on biomass concentrations' truevalue='true' />
                <when value='true'>
                    <param name='conc_biom_bounds' type='text' value='()' label='Bounds on biomass concentrations. Bounds should be given in tuple format (see docs for more information)' />
                </when>
            </conditional>

            <conditional name='fb_select'>
                <param name='fb' type='boolean' argument='-fb' label='Flag to add bounds on biomass fluxes' truevalue='true' />
                <when value='true'>
                    <param name='flux_biom_bounds' type='text' value='()' label='Bounds on biomass fluxes. Bounds should be given in tuple format (see docs for more information)' />
                </when>
            </conditional>

            <param name='verbose' type='boolean' argument='-v' label='Flag to get debug information'/>

        </section>

    </inputs>

    <outputs>
    <data name='plots' label='Plots' format='pdf'/>
    <data name='fluxes' label='Flux_results' format='tabular'/>
    <data name='stats' label='Stat_results' format='tabular'/>
    <data name='config' label='Config_file' format='json'/>
    </outputs>

    <tests>
        <test>
            <param name='input_selection|input_selector' value='tsv' />
            <param name='input_selection|datafile' value='KEIO_ROBOT6_1.tsv' />
            <section name='basic_settings'>
                <param name='lag' value='false'/>
                <param name='deg_select|deg' value='false'/>
                <param name='mc_select|montecarlo' value='false'/>
            </section>
            <section name='advanced_settings'>
                <param name='vini' value='1'/>
                <param name='sd_select|sd' value='false'/>
                <param name='cm_select|cm' value='false'/>
                <param name='fm_select|fm' value='false'/>
                <param name='cb_select|cb' value='false'/>
                <param name='fb_select|fb' value='false'/>
                <param name='verbose' value='false'/>
            </section>
            <output name='fluxes'>
                <assert_contents>
                    <has_n_columns n='7'/>
                </assert_contents>
            </output>

        </test>
    </tests>

    <help><![CDATA[
.. class:: warningmark

**PhysioFit is a scientific tool designed to i) quantify exchange (production and consumption) fluxes and ii) cell growth
rate during (batch) cultivations of microorganisms.**

Fluxes are estimated from time-course measurements of extracellular metabolites and biomass concentrations. PhysioFit has been designed to
calculate fluxes in batch experiments, assuming cells are in metabolic (pseudo) steady-state (i.e. fluxes are constant during the experiment).

**PhysioFit includes the following features:**

   * **calculation of growth rate and extracellular (uptake and production) fluxes**.
   * if cell growth has some **lag** (e.g. due to adaptation to a novel environment), lag can be taken into account and lag time estimated.
   * **non-enzymatic degradation** of some metabolites (e.g. DHA or glutamine) can be estimated and taken into account when calculating fluxes.
   * sensitivity analyses are performed to **estimate the precision of the calculated fluxes**.
   * **evaluation of the goodness of fit and visual inspection of the fitted curves**.
   * shipped as a **library** with both a **graphical** and **command line** interface,
   * open-source, free and easy to install everywhere where Python 3 and pip run,
   * biologist-friendly.

It is one of the routine tools that we use at the MetaSys team and `MetaToul platform <http://www.metatoul.fr>`_ to calculate fluxes.

The code is open-source, and available on `GitHub <https://github.com/MetaSys-LISBP/PhysioFit/>`_ under a GPLv3 license.

We strongly encourage you to read the `documentation <https://physiofit.readthedocs.io/en/latest/>`_ before using PhysioFit.

    ]]></help>
    <citations>
        <citation type='bibtex'>
    @misc{githubphysiofit,
      author = {Le Gregam, Loic},
      year = {2022},
      title = {PhysioFit},
      publisher = {Peiro et al.},
      journal = {Appl Environ Microbiol},
      url = {https://journals.asm.org/doi/10.1128/AEM.00768-19},
    }</citation>
        </citations>
</tool>